name: Terraform Backend Bootstrap

on:
  push:
    branches:
      - main
      - master

jobs:
  bootstrap:
    name: Bootstrap S3 Backend
    runs-on: ubuntu-latest

    environment:
      name: production

    defaults:
      run:
        working-directory: terraform-backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Check and import existing DynamoDB table if present
        run: |
          if aws dynamodb describe-table --table-name terraform-locks >/dev/null 2>&1; then
            echo "DynamoDB table terraform-locks exists. Importing into Terraform state."
            terraform import aws_dynamodb_table.terraform_locks terraform-locks
          else
            echo "DynamoDB table terraform-locks does not exist. Terraform will create it."
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}

      - name: Debug backend.tfvars presence
        run: |
          echo "Files in working directory:"
          ls -la
          echo "Contents of backend.tfvars:"
          cat backend.tfvars

      - name: Terraform Plan
        run: terraform plan -var-file="backend.tfvars"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file="backend.tfvars"
